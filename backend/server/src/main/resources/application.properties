# run the with application-dev.properties, which has the correct Auth0 value
# mvn spring-boot:run "-Dspring-boot.run.profiles=dev"

spring.application.name=libbooks-server

# Mysql driver config
# spring.datasource.url=jdbc:mysql://localhost:3306/demo?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.url=jdbc:mysql://localhost:3307/libbooksdb?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=admin
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.data.rest.basePath=/api

# Adding SSL cert, use with the keystore.p12, if not use, just use the http for local development
# keytool -genkeypair -alias springboot-ssl -keyalg RSA -keysize 2048 -storetype PKCS12 -keystore localhost.p12 -validity 3650
server.port=8443
server.ssl.key-store=classpath:cert/localhost.p12
server.ssl.key-store-password=changeit
server.ssl.key-store-type=PKCS12

# Oath2 config
#okta.oauth2.issuer=https://<your_domain_issuer>/ -> the '/' at the is needed
#okta.oauth2.client-id=<your_client-id>
#okta.oauth2.groupsClaim=<your_post_login_action_url_created_in_triggers_post_login>/roles
#okta.oauth2.audience=<backend-port-with-url>

okta.oauth2.issuer=https://dev-nyapj7lpkatkjgo3.us.auth0.com/
okta.oauth2.client-id=xyT3nxg4GU5Inbgk984hkkOFK74yVTCG
okta.oauth2.groupsClaim=https://my-react-libbooks.com/roles
okta.oauth2.audience=https://localhost:8443/

logging.level.org.springframework.security=DEBUG

